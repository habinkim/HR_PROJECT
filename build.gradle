plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ecoandrich'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	developmentOnly
	asciidoctorExt
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('generated', file("src/main/generated"))
	set('snippetsDir', file("build/generated-snippets"))
}

def queryDslVersion = '5.0.0:jakarta'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	annotationProcessor (
			'org.springframework.boot:spring-boot-configuration-processor',
			'org.projectlombok:lombok',
			"com.querydsl:querydsl-apt:${queryDslVersion}",
			'jakarta.persistence:jakarta.persistence-api',
			'jakarta.annotation:jakarta.annotation-api'
	)

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor (
			'org.springframework.boot:spring-boot-configuration-processor',
			'org.projectlombok:lombok'
	)

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mariadb'
	testImplementation "org.junit.jupiter:junit-jupiter:5.9.0"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

sourceSets {
	main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory(file(generated))
}

compileJava.doFirst {
	delete file(generated)
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test

	sources{
		include("**/index.adoc","**/common/*.adoc")
	}
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

